<?php defined('SYSPATH') or die('No direct script access.');class Controller_Frontend_Tag extends Controller_Frontend {	protected function _perpare_criteria_for_search(array $filters)	{		$criteria = array();		foreach(array('country_id', 'category_id', 'year', 'post_user_id') as $field)		{			if( ! empty($filters[$field]))			{				$criteria[$field] = $filters[$field];			}		}		//$criteria['order'] = array('film.last_update' => 'DESC');		$criteria['order'] = array('film.post_date' => 'DESC');		if( in_array($filters['order_by'], array('views', 'title', 'last_update', 'year', 'liked_times')))		{			$criteria['order'] = array('film.' . $filters['order_by'] => 'DESC');		}		$criteria['active'] = 1;		return $criteria;	}		public function action_index()	{		$title_ascii = Light_Helper_Base::remove_accent_vn(			$this->_input->filter_single('title_ascii', Light_Input::STRING)		);		$film_model = $this->_get_film_model();		$tag_model = $this->_get_tag_model();				// Fix code cũ		$title = str_replace('-', ' ', $this->_input->filter_single('title_ascii', Light_Input::STRING));		if($title != $title_ascii AND $tag = $tag_model->get_tag_by_title($title))		{			$this->redirect(Light_Link::build('tag', $tag, NULL, TRUE, TRUE), 301);		}		// end fix				if(empty($title_ascii))		{			$this->redirect(				Light_Link::build('error', 'action=404', 'path=' . $this->request->uri())			);		}		if(!$tag = $tag_model->get_tag_by_title_ascii($title_ascii))		{			$this->redirect(				Light_Link::build('search', 'keyword='.$title_ascii)			);		}				$page = $this->_input->filter_single('page', Light_Input::UINT);		$page = max($page, 1);		$perpage = Light_Application::get('options')->films_per_page;				$filters = $this->_input->filter(array(			'order_by'		=> Light_Input::STRING,			'year' 			=> Light_Input::UINT,			'country_id'	=> Light_Input::UINT,			'category_id'	=> Light_Input::UINT,		));		// to SEO		$year = date('Y');				$block['title'] 		= "Phim $tag[title]";		$tag['link'] 			= Light_Link::build('tag', $tag);				$view_params = array(			'tag'				=> $tag,			'show'	=> array(				'country_filter' 	=> 1,				'category_filter' 	=> 1,				'year_filter' 		=> 1,				'order_filter' 		=> 1,			),		);				// film ids by tag_id		$film_ids = $film_model->get_film_ids_by_tag_id($tag['tag_id']);		$count_films = 0;		$total_pages = 0;				$films = array();		if($film_ids)		{			// prepare criteria			$criteria = $this->_perpare_criteria_for_search($filters);						$criteria += array(				'film_id' => $film_ids,			);						$count_films = $film_model->get_count_films($criteria);			$total_pages = ceil($count_films/$perpage);			$page = min($page, $total_pages);			if($count_films)			{				$films = $film_model->get_films($criteria, array(					'page' => $page,					'perpage' => $perpage,					'order' => $criteria['order'],				));				$films = array_map('Light_Helper_Film::parse', $films);			}		}				$title = Light_Helper_Unicode::ucwords($tag['title']);		$title_ascii = Light_Helper_Unicode::remove_accent($title);		//$title = preg_replace('#^phim\s*(.*)$#iu', '$1', $title);		if($count_films > 1)		{			$view_params += array(				'page_title'		=> "Tuyển tập phim {$title} - Xem Phim {$title_ascii} moi nhat $year",				'page_keywords'		=> "{$title}, Phim $tag[title], Xem phim {$title_ascii}, download {$title_ascii}, tải phim $title",				'page_description'	=> "Xem phim {$title} online, Tổng hợp các bộ phim về {$title}, download phim {$title_ascii}, mediafire {$title}",			);			}		else		{			$view_params += array(				'page_title'		=> "Phim {$title} - Xem Phim {$title} online",				'page_keywords'		=> "{$title}, Phim {$title}, Xem phim {$title_ascii}, download {$title_ascii}, tải phim {$title}",				'page_description'	=> "Xem phim {$title} online, Thông tin chi tiết về {$title}, download phim {$title}, mediafire {$title}",			);			}				// for SEOing		if( ! strcasecmp($title, 'phim cấp 3'))		{			$this->redirect('http://bitphim.net/'.$this->request->uri());						// ambient			/*$this->redirect(				Light_Link::build('home', '', 'ref=pc3')			);*/					}			list($left, $right) = explode('__page', 			Light_Link::build('tag', $tag + array('page' => '__page'), $this->request->query())		);		$page_nav = Light_Helper_Base::page_navigation($page, $total_pages, $left, $right);				if($page > 1)		{			$tag += array('page' => $page);		}		$view_params += array(			'filters' => $filters,			'films' => $films,			'block' => $block,			'page_nav' => $page_nav,		);				return $this->response_view('list', $view_params);			}		protected function _get_film_model()	{		return $this->get_model('Light_Model_Film');	}		protected function _get_tag_model()	{		return $this->get_model('Light_Model_Tag');	}} 