<?php defined('SYSPATH') or die('No direct script access.');class Controller_Frontend_Country extends Controller_Frontend {	protected function _perpare_criteria_for_search(array $filters)	{		$criteria = array();		foreach(array('country_id', 'category_id', 'year', 'post_user_id') as $field)		{			if( ! empty($filters[$field]))			{				$criteria[$field] = $filters[$field];			}		}		//$criteria['order'] = array('film.last_update' => 'DESC');		$criteria['order'] = array('film.post_date' => 'DESC');		if( in_array($filters['order_by'], array('views', 'title', 'last_update', 'year', 'liked_times')))		{			$criteria['order'] = array('film.' . $filters['order_by'] => 'DESC');		}		$criteria['active'] = 1;		return $criteria;	}	public function action_index()	{		$name_ascii = Light_Helper_Base::remove_accent_vn(			$this->_input->filter_single('name_ascii', Light_Input::STRING)		);		$film_model = $this->_get_film_model();		$country_model = $this->_get_country_model();		if(empty($name_ascii) OR !$country = $country_model->get_country_by_name_ascii($name_ascii))		{			$this->redirect(				Light_Link::build('error', 'action=404', 'path=' . $this->request->uri())			);		}		$page = $this->_input->filter_single('page', Light_Input::UINT);		$page = max($page, 1);		$perpage = Light_Application::get('options')->films_per_page;		$filters = $this->_input->filter(array(			'order_by'		=> Light_Input::STRING,			'year' 			=> Light_Input::UINT,			'country_id'	=> Light_Input::UINT,			'country_id'	=> Light_Input::UINT,		));		// to SEO		$year = date('Y');		$block['title'] 		= "Phim $country[name]";		$country['link'] 		= Light_Link::build('country', $country);		$view_params = array(			'country'			=> $country,			'show'	=> array(				'country_filter' 	=> 0,				'category_filter' 	=> 1,				'year_filter' 		=> 1,				'order_filter' 		=> 1,			),		);		if( ! $filters['year'])		{			$view_params += array(                'page_title'		=> "Xem Phim $country[name] hay, hot nhất $year, Tong hop Phim $name_ascii moi $year",                'page_keywords'		=> "Phim $country[name], Xem phim $country[name], Phim $country[name] $year, xem phim $country[name] $year, phim $country[name] hay, Phim $country[name] mới nhất",                'page_description'	=> "Xem phim $country[name] hay nhất $year. Tổng hợp các bộ phim $country[name] hay nhất, mới nhất và hấp dẫn nhất của diện ảnh thế giới...",			);		}		else		{			$year = $filters['year'];			$block['title'] 	= "Phim $country[name] $year";			$view_params += array(                'page_title'		=> "Phim $country[name] $year, Phim $country[name] hot $year mới nhất",                'page_keywords'		=> "Phim $country[name], Xem phim $country[name],Phim $country[name] $year, xem phim $country[name] $year hay, Phim $country[name] mới nhất",                'page_description'	=> "Xem phim $country[name] hay nhất $year. Tổng hợp các bộ phim $country[name] hay nhất, mới nhất và hấp dẫn nhất của diện ảnh thế giới...",			);		}		// prepare criteria		$criteria = $this->_perpare_criteria_for_search($filters);		$criteria['country_id'] = $country['country_id'];		$count_films = $film_model->get_count_films($criteria);		$total_pages = ceil($count_films/$perpage);		$page = min($page, $total_pages);		$films = array();		if($count_films)		{			$films = $film_model->get_films($criteria, array(				'page' => $page,				'perpage' => $perpage,				'order' => $criteria['order'],			));			$films = array_map('Light_Helper_Film::parse', $films);		}		list($left, $right) = explode('__page',			Light_Link::build('country', $country + array('page' => '__page'), $this->request->query())		);		$page_nav = Light_Helper_Base::page_navigation($page, $total_pages, $left, $right);		if($page > 1)		{			$country += array('page' => $page);		}		$view_params += array(			'filters' => $filters,			'films' => $films,			'block' => $block,			'page_nav' => $page_nav,		);		return $this->response_view('list', $view_params);	}	protected function _get_film_model()	{		return $this->get_model('Light_Model_Film');	}	protected function _get_country_model()	{		return $this->get_model('Light_Model_Country');	}}