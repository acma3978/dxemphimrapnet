<?php defined('SYSPATH') or die('No direct script access.');class Controller_Light extends Controller {	/**	 * Instance of session	 * @var Kohana_Session	*/	protected $_session;	/**	 * Instance of cache	 * @var Kohana_Cache	*/	protected $_cache;	/**	 * Enable caching ?	 * @var boolean	*/	protected $_caching = TRUE;	/**	 * Caching model objects for the lifetime of the controller.	 * @var array	*/	protected $_model_cache = array();	/**	 * Layout view params	 * @var array	*/	protected $_layout_params = array();	/**	 * Input filter	 * @var Light_Input	*/	protected $_input;	public function __construct(Request $request, Response $response)	{		parent::__construct($request, $response);		Light_Application::start();		$this->_session = Session::instance();		$this->_input = new Light_Input($this->request->param() + $_REQUEST);		$this->_cache = Cache::instance();		$this->_setup_visitor();				// cache categories, countries		$light = Light_Application::instance();		$light->add_lazy_loader('categories', array($this, 'load_categories'));		$light->add_lazy_loader('countries', array($this, 'load_countries'));        $light->add_lazy_loader('contents', array($this, 'load_contents'));	}	/**	 * Setup visitor	 * @return void	*/	protected function _setup_visitor()	{		Light_Auth::instance()->auto();	}	/**	 * Helper to assert that this action is available over POST only. Throws	 * an exception if the request is not via POST.	 */	protected function _assert_post_only()	{		if ($this->request->method() !== 'POST')		{			throw new Light_Exception('Action avaliable via post only.', NULL, 500);		}	}	/**	 * Gets the specified model object from the cache. If it does not exist,	 * it will be instantiated.	 *	 * @param string - Class name of the model to load	 * @param boolean - create new model object or gets model from cache	 * @return Light_Model	*/	public function get_model($model_name, $new_object = FALSE)	{		if($new_object === TRUE)		{			return Light_Model::create($model_name);		}		if(empty($this->_model_cache[$model_name]))		{			$this->_model_cache[$model_name] = Light_Model::create($model_name);		}		return $this->_model_cache[$model_name];	}	/**	 * Create new instance of view	 * @param string $view - path inside /views/	 * @return View	*/	public function view($view)	{		return View::factory($view);	}	/**	 * @param	array	 * @return	void	*/	public function response_json(array $data)	{		$data += array(			'error'			=> 0,			// error count			'message' 		=> '',			// message to show to user			'alert'			=> FALSE,		// alert if message is no empty			'page_title'	=> '',			// title to change page title			'html'			=> '',			// html			'json'			=> '',			// json			'redirect'		=> '',			// url to redirect after		);		$this->response->body(json_encode($data));	}	/**	 * Gets name of current route	 * @return string	*/	public function get_route_name()	{		return Route::name($this->request->route());	}    /**     * @return array all contents     */    public function load_contents()    {        $contents = Light_Model::create('Light_Model_Film')->get_all_contents();        foreach($contents as $content_id => $content)        {            $contents[$content_id]['link'] = Light_Link::film('film', $content);            $contents[$content_id]['link_nd'] = Light_Link::film('content', $content);        }        return $contents;    }	/**	 * @return array all countries	*/	public function load_countries()	{		$countries = Light_Model::create('Light_Model_Country')->get_all_countries();		foreach($countries as $country_id => $country)		{			$countries[$country_id]['link'] = Light_Link::build('country', $country);		}		return $countries;	}	/**	 * @return array all categories	*/	public function load_categories()	{		$categories = Light_Model::create('Light_Model_Category')->get_all_categories();		foreach($categories as $category_id => $category)		{			$categories[$category_id]['link'] = Light_Link::build('category', $category);		}		return $categories;	}	/**	 * @return Light_Model_Registry	*/	protected function _get_registry_model()	{		return $this->get_model('Light_Model_Registry');	}	/**	 * Debug	*/	public function after()	{		return;		$db = Profiler::groups();		if( ! empty($db['database (default)']))		{			$db = $db['database (default)'];			$count = 0;			foreach($db as $tokens)			{				$count += count($tokens);			}			echo("Queries: " . $count);		}		echo View::factory('profiler/stats');		exit;	}}