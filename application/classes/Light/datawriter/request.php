<?php defined('SYSPATH') or die('No direct script access.'); /** * Light DataWriter Request *  * @package: 	Light * @author:		Phan Thanh Cong <chiplove.9xpro@gmail.com> * @version:	1.0 * @release:	Sep 13, 2012*/class Light_DataWriter_Request extends Light_DataWriter {	protected function _get_table_name()	{		return 'request';	}	protected function _get_fields()	{		return array(	 		'request_id'				=> self::UINT,            'film_id'				=> self::STRING,            'captcha'				=> self::STRING,			'title'				=> self::STRING,			'name'				=> self::STRING,			'email'					=> self::STRING,            'message'				=> self::STRING,            'dateline'				=> self::UINT,			'active'				=> self::BOOLEAN,		);	}		protected function _get_update_condition()	{		return 'request_id = ' . $this->_db->quote($this->get_existing('request_id'));	}			protected function _prepare_save()	{		// common rules		$validation = Validation::factory($this->_new_data)            ->rule('title',			'Light_DataWriter::not_empty', array(':validation', ':value', ':field'))			->rule('name', 			'min_length', array(':value', 2))			->rule('name',			'Light_DataWriter::not_empty', array(':validation', ':value', ':field'))			->rule('email',				'email')            ->rule('message',			'Light_DataWriter::not_empty', array(':validation', ':value', ':field'))		;		// insert rules		if($this->is_insert())		{			$validation				->rule('title', 		'not_empty')				//->rule('title', 		'Light_DataWriter_Request::verify_title', array(':validation', ':value'))				->rule('name',		'not_empty')				->rule('email',			'not_empty')				//->rule('email', 		'Light_DataWriter_User::verify_email', array(':validation', ':value'))                ->rule('message', 		'not_empty')				->rule('dateline',	'not_empty')			;		}		$validation->check();		$this->errors($validation->errors('errors'));	}		/**	 * Check the user_id already exists or not.	 * If it is NOT already exists then add error to validation	*/		/**	 * Check the user name existing or no <exclusion user_id>	 * If it is already exists then add error to validation	*/	public static function verify_title($validation, $title, $exclusion_title_id = NULL)	{		if($title !== NULL)		{			$request_model = Light_Model::create('Light_Model_Request');			echo $exclusion_title_id;			if($title = $request_model->get_title_by_name($title))			{				 if($exclusion_title_id !== NULL AND $title['title'] == $exclusion_title_id)				 {					 return;				 }				 $validation->error('title', 'already_exists');			}		}	}		/**	 * Check the user email existing or no <exclusion user_id>	 * If it is already exists then add error to validation	*/	public static function verify_email($validation, $email, $exclusion_user_id = NULL)	{		if($email !== NULL)		{			$user_model = Light_Model::create('Light_Model_Request');			if($user = $user_model->get_user_by_email($email))			{				 if($exclusion_user_id !== NULL AND $user['user_id'] == $exclusion_user_id)				 {					 return;				 }				 $validation->error('email', 'already_exists');			}		}	}		protected function _get_film_model()	{		return $this->_get_model('Light_Model_Film');	}    protected function _get_request_model()    {        return $this->_get_model('Light_Model_Request');    }}