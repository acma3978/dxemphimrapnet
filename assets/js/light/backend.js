Light.Backend = {};$(document).ready(function () {	Light.Backend.Sidebar.init();	Light.Backend.Form.init();    Light.Public.init();});Light.Backend.Sidebar = function() {	this.options = this.getOptions();	this.$menu = $("#sidebar");	this.$menu.find('.toggle').click($.context(this, 'toggleClick'));	this.setup();}Light.Backend.Sidebar.init = function() {	new Light.Backend.Sidebar();}Light.Backend.Sidebar.prototype = {	setup: function() {		for(var name in this.options) {			if( ! this.options[name]) {				this.$menu.find('.menu#' + name).addClass('toggle-off');			}		}	},	getOptions: function() {		try {			return $.parseJSON($.cookie('menu-toggle')) || [];		} catch(e) {			return [];		}		},	toggleClick: function(e) {		var $toggle = $(e.currentTarget);		var $menu = $toggle.parents('.menu');		var $items = $menu.find('.items');		var name = $menu.attr('id');				if($menu.hasClass('toggle-off')) { // to show			$items.slideToggle(150);			$menu.removeClass('toggle-off');			this.setOption(name, true);		} else { // to hide			$items.slideToggle(150, null, function() { 				$menu.addClass('toggle-off');			});			this.setOption(name, false);		}		},	setOption: function(name, value) {		this.options[name] = value;		this.saveOptions();		},	saveOptions: function() {		var settings = [];		for(key in this.options) {			settings.push('"' + key + '": ' +  this.options[key]);		}		$.cookie('menu-toggle', '{' + settings.join(',') + '}', {expires : 30, path : '/'});	}};Light.Backend.Form = {};Light.Backend.Form.init = function() {	Light.Backend.Form.registerCheckAllClick();    Light.Backend.Form.registerTabClick();}Light.Backend.Form.registerTabClick = function() {    $('.tabs .tab').click(function (e) {        var $tabs = $(this).parent();        var name = $(this).data('name');        var $target = $($tabs.data('target'));        console.log(name);        $tabs.find('.tab').removeClass('active');        $(this).addClass('active');        $target.find('.tab').hide();        $target.find('.' + name).show();    });}Light.Backend.Form.registerCheckAllClick = function() {	var checkAll = $('input:checkbox.check-all');	var isChecked = checkAll.is(':checked');	checkAll.parents('form').find('input:checkbox').attr('checked', isChecked); // default		$('input:checkbox.check-all').click(function() {		$(this).parents('form').find('input:checkbox').attr('checked', $(this).is(':checked'));	});}/****************** FILM ******************/$(document).ready(function () {	Light.Film.TagAutoComplete.init($(".panel textarea#tags"));});Light.Film = {};Light.Film.TagAutoComplete = function($element) {	this.$input = $element;	var options = {		multiple: ',', // use ";" or "," to multiple		minLength: 2,		queryKey: 'keyword',		extraParams: {},	};	this.url = 'ajax/tag/search'	this.multiple = options.multiple;	this.minLength = options.minLength;	this.queryKey = options.queryKey;	this.extraParams = options.extraParams;	this.$results = null;	this.selectedValue = 0;	this.resultVisible = false;	this.timer = null;	this.setup();}Light.Film.TagAutoComplete.prototype = $.extend(	true, {}, Light.AutoComplete.prototype);Light.Film.TagAutoComplete.init = function($element) {	new Light.Film.TagAutoComplete($element);}/****************** PUBLIC ******************/Light.Public = {    init: function () {        $(document).ready(function (e) {            Light.Public.registerCheckAllClickLink();        });    },    registerCheckAllClickLink: function() {        /*var link = document.location.href;        Light.ajax({            url: 'ajax/comment/list/',            type: 'POST',            cache: loadFromCache || false,            data: {                'film_id': filmId,                'page': page            },            success: function (data) {                $('#comment .comment-list').html(data.html);                $(document).ready(function (e) {                    AppPack.Comment.registerPageClick(filmId);                    $('#comment .comment-list .comment .delete').click(function () {                        $comment = $(this).parents('.comment');                        AppPack.Comment.remove(filmId, $comment.data('comment-id'));                    });                    AppPack.Comment.registerUserNameClick();                });            }        });*/        /*$('a').click(function(evt) {            $.post( "ajax/logs", {link:link}).done(function( data ) {                console.log(data);            });        });*/    }}